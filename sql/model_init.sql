-- Tabla: rol
CREATE TABLE rol (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(50) NOT NULL UNIQUE
);

-- Tabla: usuario
CREATE TABLE usuario (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(100) NOT NULL,
    correo VARCHAR2(100) NOT NULL UNIQUE,
    contrasenia VARCHAR2(200) NOT NULL,
    estado VARCHAR2(20) DEFAULT 'PENDIENTE' 
        CHECK (estado IN ('ACTIVO', 'PENDIENTE', 'BLOQUEADO')),
    fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    fecha_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Tabla: token
CREATE TABLE token (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    id_usuario NUMBER NOT NULL,
    token VARCHAR2(500) NOT NULL,
    fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    fecha_expiracion TIMESTAMP,
    valido CHAR(1) DEFAULT 'S' 
        CHECK (valido IN ('S', 'N')),
    CONSTRAINT fk_token_usuario FOREIGN KEY (id_usuario) REFERENCES usuario(id) ON DELETE CASCADE
);

-- Tabla: usuario_rol
CREATE TABLE usuario_rol (
    id_usuario NUMBER PRIMARY KEY,
    id_rol NUMBER NOT NULL,
    CONSTRAINT fk_usuario FOREIGN KEY (id_usuario) REFERENCES usuario(id) ON DELETE CASCADE,
    CONSTRAINT fk_rol FOREIGN KEY (id_rol) REFERENCES rol(id)
);

-- Tabla: tipo_pregunta
CREATE TABLE tipo_pregunta (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(50)
);

-- Tabla: PlanEstudio
CREATE TABLE plan_estudio (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(100)
);

-- Tabla: Unidad
CREATE TABLE unidad (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(100),
    plan_estudio_id NUMBER,
    CONSTRAINT fk_unidad_plan FOREIGN KEY (plan_estudio_id) REFERENCES plan_estudio(id)
);

-- Tabla: Contenido
CREATE TABLE contenido (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(100),
    unidad_id NUMBER,
    CONSTRAINT fk_contenido_unidad FOREIGN KEY (unidad_id) REFERENCES unidad(id)
);

-- Tabla: Tema
CREATE TABLE tema (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(100),
    contenido_id NUMBER,
    CONSTRAINT fk_tema_contenido FOREIGN KEY (contenido_id) REFERENCES contenido(id)
);

-- Tabla: banco_preguntas
CREATE TABLE banco_preguntas (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    enunciado CLOB,
    tipo_pregunta_id NUMBER,
    respuesta_correcta CLOB,
    respuesta_correcta_opcion_id NUMBER,
    es_publica CHAR(1) CHECK (es_publica IN ('S', 'N')),
    dificultad VARCHAR2(10) CHECK (dificultad IN ('facil', 'media', 'dificil')),
    tasa_respuesta_correcta NUMBER(5,2),
    requiere_revision CHAR(1) CHECK (requiere_revision IN ('S', 'N')),
    usuario_id NUMBER,
    tema_id NUMBER,
    CONSTRAINT fk_tipo_pregunta FOREIGN KEY (tipo_pregunta_id) REFERENCES tipo_pregunta(id),
    CONSTRAINT fk_usuario_banco FOREIGN KEY (usuario_id) REFERENCES usuario(id),
    CONSTRAINT fk_tema FOREIGN KEY (tema_id) REFERENCES tema(id)
);

-- Tabla: opcion_respuesta
CREATE TABLE opcion_respuesta (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    pregunta_id NUMBER,
    texto CLOB,
    es_correcta CHAR(1),
    CONSTRAINT fk_pregunta_opcion FOREIGN KEY (pregunta_id) REFERENCES banco_preguntas(id) ON DELETE CASCADE
);

-- Tabla: sub_pregunta
CREATE TABLE sub_pregunta (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    pregunta_padre_id NUMBER,
    enunciado CLOB,
    porcentaje NUMBER(5,2),
    tipo_subpregunta VARCHAR2(100),
    respuesta_correcta CLOB,
    tiempo_maximo NUMBER,
    CONSTRAINT fk_sub_pregunta FOREIGN KEY (pregunta_padre_id) REFERENCES banco_preguntas(id) ON DELETE CASCADE
);

-- Tabla: respuesta_correcta
CREATE TABLE respuesta_correcta (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    banco_pregunta_id NUMBER,
    sub_pregunta_id NUMBER,
    texto CLOB,
    CONSTRAINT fk_respuesta_correcta_pregunta FOREIGN KEY (banco_pregunta_id) REFERENCES banco_preguntas(id) ON DELETE CASCADE,
    CONSTRAINT fk_respuesta_correcta_sub FOREIGN KEY (sub_pregunta_id) REFERENCES sub_pregunta(id) ON DELETE CASCADE
);



ALTER TABLE banco_preguntas
ADD pregunta_padre_id NUMBER
    REFERENCES banco_preguntas(id)
    ON DELETE CASCADE;

ALTER TABLE banco_preguntas ADD porcentaje NUMBER;

ALTER TABLE banco_preguntas ADD tiempo_maximo NUMBER;


-- Tabla: curso
CREATE TABLE curso (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(100) NOT NULL,
    descripcion CLOB,
    docente_id NUMBER NOT NULL,
    plan_estudio_id NUMBER NOT NULL,
    fecha_inicio DATE,
    fecha_fin DATE,
    codigo_acceso VARCHAR2(50) UNIQUE,
    estado VARCHAR2(20) DEFAULT 'ACTIVO' 
        CHECK (estado IN ('ACTIVO', 'CERRADO', 'CANCELADO')),
    CONSTRAINT fk_curso_docente FOREIGN KEY (docente_id) REFERENCES usuario(id),
    CONSTRAINT fk_curso_plan FOREIGN KEY (plan_estudio_id) REFERENCES plan_estudio(id)
);

-- Tabla: curso_estudiante
CREATE TABLE curso_estudiante (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    curso_id NUMBER NOT NULL,
    estudiante_id NUMBER NOT NULL,
    fecha_inscripcion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_curso_est FOREIGN KEY (curso_id) REFERENCES curso(id) ON DELETE CASCADE,
    CONSTRAINT fk_estudiante FOREIGN KEY (estudiante_id) REFERENCES usuario(id) ON DELETE CASCADE
);

CREATE TABLE estado_evaluacion (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(30) UNIQUE NOT NULL
);

CREATE TABLE tipo_seleccion (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(30) UNIQUE NOT NULL
);

CREATE TABLE estado_evaluacion_estudiante (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(30) UNIQUE NOT NULL
);

CREATE TABLE evaluacion (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(150) NOT NULL,
    descripcion CLOB,
    tiempo_maximo NUMBER,
    tipo_seleccion_id NUMBER NOT NULL,
    estado_id NUMBER NOT NULL,
    docente_id NUMBER NOT NULL,
    fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_tipo_seleccion FOREIGN KEY (tipo_seleccion_id) REFERENCES tipo_seleccion(id),
    CONSTRAINT fk_estado_evaluacion FOREIGN KEY (estado_id) REFERENCES estado_evaluacion(id),
    CONSTRAINT fk_docente_evaluacion FOREIGN KEY (docente_id) REFERENCES usuario(id)
);

CREATE TABLE evaluacion_pregunta (
    evaluacion_id NUMBER NOT NULL,
    pregunta_id NUMBER NOT NULL,
    porcentaje NUMBER(5,2),
    orden NUMBER,
    CONSTRAINT pk_eval_pregunta PRIMARY KEY (evaluacion_id, pregunta_id),
    CONSTRAINT fk_eval_preg_eval FOREIGN KEY (evaluacion_id) REFERENCES evaluacion(id) ON DELETE CASCADE,
    CONSTRAINT fk_eval_preg_preg FOREIGN KEY (pregunta_id) REFERENCES banco_preguntas(id) ON DELETE CASCADE
);

CREATE TABLE evaluacion_curso (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    evaluacion_id NUMBER NOT NULL,
    curso_id NUMBER NOT NULL,
    fecha_apertura TIMESTAMP,
    fecha_cierre TIMESTAMP,
    intentos_permitidos NUMBER,
    umbral_aprobacion NUMBER(5,2),
    CONSTRAINT fk_eval_curso_eval FOREIGN KEY (evaluacion_id) REFERENCES evaluacion(id) ON DELETE CASCADE,
    CONSTRAINT fk_eval_curso_curso FOREIGN KEY (curso_id) REFERENCES curso(id) ON DELETE CASCADE
);

CREATE TABLE evaluacion_estudiante (
    evaluacion_id NUMBER NOT NULL,
    estudiante_id NUMBER NOT NULL,
    curso_id NUMBER NOT NULL,
    fecha_inicio TIMESTAMP,
    fecha_fin TIMESTAMP,
    calificacion NUMBER(5,2),
    estado_id NUMBER NOT NULL,
    CONSTRAINT pk_eval_est PRIMARY KEY (evaluacion_id, estudiante_id),
    CONSTRAINT fk_eval_est_eval FOREIGN KEY (evaluacion_id) REFERENCES evaluacion(id) ON DELETE CASCADE,
    CONSTRAINT fk_eval_est_est FOREIGN KEY (estudiante_id) REFERENCES usuario(id) ON DELETE CASCADE,
    CONSTRAINT fk_eval_est_curso FOREIGN KEY (curso_id) REFERENCES curso(id),
    CONSTRAINT fk_eval_est_estado FOREIGN KEY (estado_id) REFERENCES estado_evaluacion_estudiante(id)
);

CREATE TABLE respuesta_estudiante (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    evaluacion_id NUMBER NOT NULL,
    estudiante_id NUMBER NOT NULL,
    pregunta_id NUMBER NOT NULL,
    curso_id NUMBER NOT NULL,
    respuesta_opcion_id NUMBER,
    respuesta_texto CLOB,
    respuesta_compuesta CLOB,
    es_correcta CHAR(1) CHECK (es_correcta IN ('S', 'N')),
    fecha_respuesta TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_resp_est_eval FOREIGN KEY (evaluacion_id) REFERENCES evaluacion(id) ON DELETE CASCADE,
    CONSTRAINT fk_resp_est_est FOREIGN KEY (estudiante_id) REFERENCES usuario(id) ON DELETE CASCADE,
    CONSTRAINT fk_resp_est_preg FOREIGN KEY (pregunta_id) REFERENCES banco_preguntas(id),
    CONSTRAINT fk_resp_est_curso FOREIGN KEY (curso_id) REFERENCES curso(id),
    CONSTRAINT fk_resp_opcion FOREIGN KEY (respuesta_opcion_id) REFERENCES opcion_respuesta(id)
);